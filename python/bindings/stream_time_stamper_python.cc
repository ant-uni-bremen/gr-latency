/*
 * Copyright 2020 Free Software Foundation, Inc.
 *
 * This file is part of GNU Radio
 *
 * SPDX-License-Identifier: GPL-3.0-or-later
 *
 */

/***********************************************************************************/
/* This file is automatically generated using bindtool and can be manually edited  */
/* The following lines can be configured to regenerate this file during cmake      */
/* If manual edits are made, the following tags should be modified accordingly.    */
/* BINDTOOL_GEN_AUTOMATIC(0)                                                       */
/* BINDTOOL_USE_PYGCCXML(0)                                                        */
/* BINDTOOL_HEADER_FILE(stream_time_stamper.h)                                        */
/* BINDTOOL_HEADER_FILE_HASH(0db64c209ce9a54b84becae2f33bb158)                     */
/***********************************************************************************/

#include <pybind11/complex.h>
#include <pybind11/pybind11.h>
#include <pybind11/stl.h>

namespace py = pybind11;

#include <latency/stream_time_stamper.h>
// pydoc.h is automatically generated in the build directory
#include <stream_time_stamper_pydoc.h>

void bind_stream_time_stamper(py::module& m)
{

    using stream_time_stamper = gr::latency::stream_time_stamper;


    py::class_<stream_time_stamper,
               gr::sync_block,
               gr::block,
               gr::basic_block,
               std::shared_ptr<stream_time_stamper>>(
        m, "stream_time_stamper", D(stream_time_stamper))

        .def(py::init(&stream_time_stamper::make),
             py::arg("sizeof_stream_item"),
             py::arg("key_string"),
             py::arg("packet_len"),
             D(stream_time_stamper, make))


        ;
}
