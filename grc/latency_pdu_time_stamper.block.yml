id: latency_pdu_time_stamper
label: PDU time stamper
category: '[latency]'

templates:
  imports: import latency
  make: latency.pdu_time_stamper(${key_string}, ${name})

#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
parameters:
- id: key_string
  label: Key string
  dtype: string
-   id: name
    label: Name
    dtype: string
    default: '"pdu timestamp debug"'

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)
inputs:
-   domain: message
    id: PDUin
    optional: False

outputs:
-   domain: message
    id: PDUout
    optional: False

#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1
