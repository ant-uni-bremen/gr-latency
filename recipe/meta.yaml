{% set name = "gr-latency" %}
{% set version = environ.get('GIT_DESCRIBE_TAG', 'untagged')|string|replace('-','_') %}
{% set build_number = environ.get('GIT_DESCRIBE_NUMBER', '0') %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  git_url: {{ environ.get('FEEDSTOCK_ROOT', '..') }}

build:
  # Uncomment the following line if the package is pure Python and the recipe
  # is exactly the same for all platforms. It is okay if the dependencies are
  # not built for all platforms/versions, although selectors are still not allowed.
  # See https://conda-forge.org/docs/maintainer/knowledge_base.html#noarch-python
  # for more details.
  # noarch: python

  number: {{ build_number }}
  string: {{ [build_number, ('h' + PKG_HASH), environ.get('GIT_DESCRIBE_HASH', '')]|join('_') }}

  # If the installation is complex, or different between Unix and Windows,
  # use separate bld.bat and build.sh files instead of this key. By default,
  # the package will be built for the Python versions supported by conda-forge
  # and for all major OSs. Add the line "skip: True  # [py<35]" (for example)
  # to limit to Python 3.5 and newer, or "skip: True  # [not win]" to limit
  # to Windows.
  # script: "{{ PYTHON }} -m pip install . -vv"

requirements:
  build:
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - git
    - pip
    - cmake >=3.16
    - ninja
    - pkg-config  # [not win]

  host:
    - python
    - numpy >=1.22
    - fmt
    - spdlog
    - pybind11
    - gmp  # [not win]
    - fftw
    - volk >=2.5
    - gnuradio-core >=3.10  # [not gnuradio_extra_pin]
    - gnuradio-core {{ gnuradio_extra_pin }}.*  # [gnuradio_extra_pin]

  run:
    - python

test:
  # Some packages might need a `test/commands` key to check CLI.
  # List all the packages/modules that `run_test.py` imports.
  imports:
    - latency
  # Run your test commands here
  # commands:
  #   - gr-latency --help
  #   - pytest
  # declare any test-only requirements here
  # requires:
  #   - pytest
  # # copy over any needed test files here
  # source_files:
  #   - tests/


about:
  home: https://github.com/ant-uni-bremen/gr-latency
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: GNU Radio OOT module to measure in-flowgraph latencies
  doc_url: https://github.com/ant-uni-bremen/gr-latency
  dev_url: https://github.com/ant-uni-bremen/gr-latency

extra:
  recipe-maintainers:
    - jdemel